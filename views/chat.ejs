<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Chat with <%= otherUser.name %></title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="/socket.io/socket.io.js"></script>
  
  <!-- Only messages scroll, header and footer are fixed -->
  <style>
   body, html {
    height: 100%;
   }
   main {
    flex: 1 1 0%;
    display: flex;
    flex-direction: column;
    padding-top: 96px;   /* header height */
    padding-bottom: 80px; /* footer height */
    min-height: 0;
  }
  #chat-container {
    flex: 1 1 0%;
    overflow-y: auto;
    min-height: 0;
  }
  header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
   }
   footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 10;
   }
  </style>
</head>
<body class="bg-gray-900 text-white flex flex-col min-h-screen">

  <!-- Header with Call Buttons -->
  <header class="bg-gray-800 p-4 text-center text-xl font-semibold shadow-md flex flex-col items-center gap-2 fixed top-0 left-0 w-full z-10">
    <div class="flex items-center justify-between w-full max-w-lg mx-auto">
      <span>ðŸ’¬ Chat with <%= otherUser.name %></span>
      <div class="flex items-center gap-2">
        <button type="button" onclick="startAudioCall()" title="Audio Call"
          class="text-green-400 hover:text-green-300 text-xl focus:outline-none">
          ðŸŽ§
        </button>
        <button type="button" onclick="startVideoCall()" title="Video Call"
          class="text-red-400 hover:text-red-300 text-xl focus:outline-none">
          ðŸŽ¥
        </button>
      </div>
    </div>
  </header>

  <!-- Chat Messages -->
  <main class="flex-1 flex flex-col pt-24 pb-20">
    <div id="chat-container" class="flex-1 px-4 py-3 overflow-y-auto space-y-4">
      <% if (messages.length === 0) { %>
        <p class="text-center text-gray-400">No messages yet. Start the conversation!</p>
      <% } else { %>
        <% messages.forEach(message => { %>
          <div class="flex <%= message.sender.toString() === user._id.toString() ? 'justify-end' : 'justify-start' %>">
            <div class="max-w-[75%] px-4 py-2 rounded-lg 
              <%= message.sender.toString() === user._id.toString() ? 'bg-indigo-600 text-white' : 'bg-gray-700 text-gray-100' %>">
              <p class="text-sm"><%= message.content %></p>
              <small class="block text-xs text-gray-300 mt-1"><%= new Date(message.timestamp).toLocaleTimeString() %></small>
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>
  </main>

  <!-- Footer: Message Input + Camera Button -->
  <footer class="bg-gray-800 p-3 shadow-inner fixed bottom-0 left-0 w-full z-10">
    <form action="/chat/<%= otherUser._id %>" method="POST" class="flex items-center gap-3 max-w-lg mx-auto">
      <label class="cursor-pointer text-xl" title="Send Image">
        ðŸ“·
        <input type="file" id="imageUpload" name="image" class="hidden">
      </label>
      <input type="text" name="content" placeholder="Type your message..." required
        class="flex-grow rounded-lg px-4 py-2 text-black focus:outline-none" />

        <!--Send button-->
      <button type="submit"
        class="bg-indigo-600 hover:bg-indigo-500 px-4 py-2 rounded-lg text-white font-semibold">
        Send
      </button>
    </form>
  </footer>

  <!-- Scripts -->
  <script>
    const socket = io();
    const userId = '<%= user._id %>';
    const otherUserId = '<%= otherUser._id %>';

    socket.emit('join', userId);

    socket.on('receiveMessage', (msg) => {
      if (msg.from === otherUserId) {
        const chatContainer = document.getElementById('chat-container');
        const msgDiv = document.createElement('div');
        msgDiv.className = 'flex justify-start';
        msgDiv.innerHTML = `
          <div class="max-w-[75%] px-4 py-2 rounded-lg bg-gray-700 text-gray-100">
            <p class="text-sm">${msg.content}</p>
            <small class="block text-xs text-gray-300 mt-1">${new Date(msg.timestamp).toLocaleTimeString()}</small>
          </div>
        `;
        chatContainer.appendChild(msgDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
      }
    });

    
    /*const form = document.querySelector('footer form');
    const input = form.querySelector('input[name="content"]');
    const imageUpload = document.getElementById('imageUpload');

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const content = input.value.trim();
      if (!content && !imageUpload.files.length) return;

      const formData = new FormData(form);
      socket.emit('sendMessage', {
        to: otherUserId,
        content,
        image: imageUpload.files[0] ? URL.createObjectURL(imageUpload.files[0]) : null
      });

      input.value = '';
      imageUpload.value = '';
    });*/

    function startAudioCall() {
      // Implement audio call functionality
      alert('Audio call is coming soon.');
    }

    function startVideoCall() {
      // Implement video call functionality
      alert('Video call feature is coming soon.');
    };

  
  </script>
</body>
</html>